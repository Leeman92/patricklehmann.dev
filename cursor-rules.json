{
    "extends": ["cursor.directory/front-end-cursor-rules"],
    "uiGuidelines": {
      "defaultStylingLibrary": "tailwind",
      "componentLibrary": "chakra-ui",
      "useComponentLibraryFor": [
        "modals",
        "menus",
        "toasts",
        "form inputs",
        "layout containers",
        "buttons",
        "cards"
      ],
      "preferTailwindFor": [
        "colors",
        "spacing",
        "typography",
        "animations",
        "custom utilities"
      ]
    },
    "projectStructure": {
      "reactRoot": "src",
      "componentsDir": "src/components",
      "legacyHtml": "src_bak/index.html",
      "tailwindConfig": "tailwind.config.js",
      "viteConfig": "vite.config.ts",
      "stylesDir": "src/index.css",
      "eslintConfig": "eslint.config.js",
      "dockerConfig": {
        "dev": "docker-compose.yml",
        "prod": "Dockerfile",
        "stack": "docker-stack.yml"
      }
    },
    "devProcess": {
      "devCommand": "docker compose up",
      "devPort": 3000,
      "devServer": "Vite",
      "devWorkingDir": "/app"
    },
    "buildProcess": {
      "buildCommand": "npm run build",
      "cssHashing": true,
      "nginxForProd": true,
      "prodDir": "dist",
      "deployment": {
        "type": "docker-swarm",
        "replicas": 2,
        "updateStrategy": "rolling",
        "healthCheck": true,
        "resourceLimits": {
          "cpu": "0.50",
          "memory": "512M"
        },
        "resourceReservations": {
          "cpu": "0.25",
          "memory": "256M"
        },
        "logging": {
          "driver": "json-file",
          "maxSize": "10m",
          "maxFiles": 3
        },
        "network": {
          "type": "overlay",
          "encrypted": true,
          "attachable": true
        },
        "ports": {
          "target": 3000,
          "published": 3000,
          "protocol": "tcp",
          "mode": "host"
        }
      }
    },
    "dependencies": {
      "ui": ["@chakra-ui/react", "@emotion/react", "@emotion/styled", "framer-motion"],
      "slider": ["swiper"],
      "styling": ["tailwindcss", "postcss", "autoprefixer"],
      "framework": ["react", "react-dom", "vite", "@vitejs/plugin-react"],
      "linting": ["@eslint/js", "globals", "eslint-plugin-react-hooks", "eslint-plugin-react-refresh"],
      "deployment": ["docker", "docker-swarm", "nginx"]
    },
    "notes": [
      "Use Tailwind for most styling and layout.",
      "Use Chakra UI for complex UI elements and layout containers.",
      "All UI components are in src/components.",
      "Legacy HTML is in src_bak for reference.",
      "Tech stack slider uses Swiper.js with React bindings.",
      "Development runs in Docker container, no local Node.js required.",
      "Production build uses hashed CSS for cache busting.",
      "ESLint configuration is in root directory.",
      "Production deployment uses Docker Swarm with 2 replicas for high availability.",
      "Zero-downtime deployments with rolling updates.",
      "Automatic failover and health checks implemented.",
      "Resource limits and reservations configured for optimal performance.",
      "Encrypted overlay network for secure container communication.",
      "Log rotation configured to prevent disk space issues.",
      "Automatic cleanup of old images to maintain system health.",
      "Port 3000 exposed for nginx proxy pass with host network mode.",
      "Single server setup - no placement constraints needed",
      "Port 3000 exposed for Nginx proxy pass with ingress network mode",
      "Using overlay network for service discovery",
      "Resource limits set to prevent container overload"
    ],
    "rules": [
      {
        "pattern": "src/**/*.{js,jsx,ts,tsx}",
        "description": "React components and JavaScript/TypeScript files"
      },
      {
        "pattern": "src/**/*.css",
        "description": "CSS and Tailwind styles"
      },
      {
        "pattern": "public/**/*",
        "description": "Static assets"
      },
      {
        "pattern": "*.{js,json,yml,yaml,ts}",
        "description": "Configuration files"
      }
    ],
    "ignore": [
      "node_modules",
      "dist",
      ".git",
      "*.log"
    ]
}
  